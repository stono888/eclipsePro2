5. result
1). result是action节点的子节点
2). result代表action方法执行后，可能去的一个目的地
3). 一个action节点可以配置多个result子节点
4). result的name属性值对应着action方法可能有的一个返回值。
	<result name="login">/login.jsp </result>
5). result 一共有2个属性，还有一个是type：表示结果的响应类型
6). result的type属性值在struts-default包的result-types节点的name属性中定义。
    常用的有
    >dispatcher(默认的)：转发。同servlet中的转发。
    >redirect:重定向
    >redirectAction:重定向到一个Action
    	注意：通过redirect的响应类型也可以辩解的实现redirectAction的功能
			<result name="index" type="redirectAction">
				<param name="actionName">testAction</param>
				<param name="namespace">/stono</param>
			 </result>
			 OR
			 <result name="index" type="redirect">/stono/testAction.do</result>
    >chain:转发到一个Action
		注意：不能通过type=dispatcher转发到一个Action
		只能是：
			<result name="test" type="chain">
				<param name="actionName">testAction</param>
				<param name="namespace">/stono</param>
			</result>
		不能是：
			<result name="test">/stono/testAction</result>
		
4. ActionSupport
1). ActionSupport是默认的Action类：若某个action节点没有配置class属性，则ActionSupport即为待执行的
Action类。而execute方法即为默认执行的action方法

		<action name="testActionSupport">
			<result>/testActionSupport.jsp</result>
		</action>
等于
		<action name="testActionSupport"
			class="com.opensymphony.xwork2.ActionSupport" 
			method="execute">
			<result name="success">/testActionSupport.jsp</result>
		</action>
2). 在手工完成字段验证，显示错误消息，国际化等情况下，推荐继承ActionSupport。

3. 关于Struts2请求的扩展名问题
1). 开发org.apache.struts2包下的default.properties中配置了Struts2应用的一些常量
2). struts.action.extension定义了当前Struts2应用可以应答的请求的扩展名
3). 可以在struts.xml文件中以常量配置的方式修改default.properties所配置的常量。
<constant name="struts.action.extension" value="action,do,"></constant>

2. 在Action中访问WEB资源：
1).什么是WEB资源？
	HttpServletRequest, HttpSession, ServletContext等原生的Servlet API。
2).为什么访问WEB资源？
	B/S应用的Controller中必然需要访问WEB资源：向域对象中读写属性，读写Cookie，获取realPath...
3).如何访问？
I.和Servlet API解耦的方式：只能访问有限的Servlet API对象，且只能访问有限的方法。（请求参数，读写域对象的属性）
	>使用ActionContext
	>实现XxxAware接口
	>选用的建议：若一个Action类中有多个action方法，且多个方法都需要使用域对象的Map或parameters，则
	建议使用Aware接口的方式；
	> session对应的Map实际上是SessionMap类型的！强转后若调用其invalide()方法，可以使其session失效。
II.和Servlet API耦合的方式：可以访问更多的Servlet API对象，且可以调用原生方法。
	>使用ServletActionContext
	>实现ServletXxxAware接口。
	
1. 复习搭建struts2的开发环境：3个步骤

2. action VS Action 类

1). action：代表一个Struts2的请求。

2). Action类：能够处理Struts2请求的类。

   >属性的名字必须遵守与JavaBean属性名相同的命名规则。
   属性的类型可以是任意类型。从字符串到非字符串(基本数据库类型)直接的数据转换可以自动发生
   >必须有一个不带参的构造器:通过反射创建实例
   >至少有一个供struts在执行这个action调用的方法
   >同一个Action可以包含多个action方法
   >struts2会为每一个请求创建一个Action实例，即Action不是单例的，是线程安全的；
   