package com.stono.struts2.action;

import java.util.Map;



import org.apache.struts2.dispatcher.SessionMap;

import com.opensymphony.xwork2.ActionContext;

public class TestActionContextAction {

	public String execute() {
		// 0. 获取ActionContext对象
		// ActionContext是Action的上下文对象，可以从中获取到Action需要的一切信息
		ActionContext actionContext = ActionContext.getContext();

		// 1. 获取application对应的Map，并向其中添加一个熟悉；
		// 通过调用ActionContext对象的getApplication()方法来获取application对象的Map对象
		Map<String, Object> applicationMap = actionContext.getApplication();
		// 设置属性
		applicationMap.put("applicationKey", "applicationValue");
		// 获取属性
		Object date = applicationMap.get("date");
		System.out.println("date:" + date);
		// 2. 获取session对应的Map，并向其中添加一个熟悉；
		Map<String, Object> sessionMap = actionContext.getSession();
		sessionMap.put("sessionKey", "sessionValue");
		System.out.println(sessionMap.getClass());
		if (sessionMap instanceof SessionMap) {
			SessionMap sm = (SessionMap) sessionMap;
			sm.invalidate();
			System.out.println("session 失效了。");
		}
		// 3. request
		// ActionContex中并没有提供getRequest方法来获取request对应的Map
		// 需要手工调用get()方法，传入request字符串来获取。
		Map<String, Object> requestMap = (Map<String, Object>) actionContext
				.get("request");
		requestMap.put("requestKey", "requestValue");
		// 4. 获取请求参数对应的Map，并获取指定的参数值
		// 键：请求参数的名字，值：请求参数的值对应的字符串数组
		// 注意：1.getParameters的返回值为Map<String,Object>,而不是Map<String,String[]>
		// 2.parameters这个Map只能读，不能写入数据，如果写入，但不出错，但也不起作用；
		Map<String, Object> parameters = actionContext.getParameters();
		System.out.println(((String[]) parameters.get("name"))[0]);
		System.out.println(parameters.get("name"));
		parameters.put("age", 100);
		return "success";
	}

}
